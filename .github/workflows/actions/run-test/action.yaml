name: Run ELF Image for Testing
description: "Run the given ELF image with QEMU and compare the output with ground truth."

inputs:
  cookie:
    description: "Cookie for download authorization."
    required: true
  category:
    description: "The name of the test category."
    required: true
  sub-category:
    description: "The name of the test sub-category."
    required: true
  test-name:
    description: "Name of the test to be run."
    required: true
  timeout:
    description: "Timeout to prevent unresponsive QEMU."
    required: false
    default: 5s

runs:
  using: "composite"
  steps:
    - name: Prepare QEMU
      uses: ./.github/workflows/actions/prepare-qemu
      with:
        cookie: ${{ inputs.cookie }}

    - name: Download ELF image test-${{ inputs.category }}-${{ inputs.sub-category }}-${{ inputs.test-name }}
      uses: actions/download-artifact@v4
      with:
        name: test-${{ inputs.category }}-${{ inputs.sub-category }}-${{ inputs.test-name }}
        path: ./artifacts

    - name: Run test ${{ inputs.test-name }}
      run: |
        timeout ${{ inputs.timeout }} \
          qemu-system-arm -machine netduinoplus2 -nographic \
          -semihosting-config enable=on,target=native \
          -kernel "./artifacts/test-${{ inputs.category }}-${{ inputs.sub-category }}-${{ inputs.test-name }}" \
          > output.txt
      shell: bash

    - name: Print output
      run: cat output.txt
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Check test output
      run: |
        test_dir="examples/tests/${{ inputs.category }}/${{ inputs.sub-category }}"
    
        # Find the non-Rust file (either .py or .txt) in the directory
        nonrust_file=$(find "$test_dir" -type f \( -name "${{ inputs.test-name }}.py" -o -name "${{ inputs.test-name }}.txt" \) -print -quit)
    
        if [ -z "$nonrust_file" ]; then
          echo "Error: No non-Rust (py or txt) file found in directory."
          exit 1
        fi
    
        # Determine the file type and perform comparison
        if [[ "$nonrust_file" == *.txt ]]; then
          diff output.txt "$nonrust_file"
        elif [[ "$nonrust_file" == *.py ]]; then
          python3 "$nonrust_file" output.txt
        else
          echo "Unsupported file extension for non-Rust file. Only .txt and .py are supported."
          exit 1
        fi
      shell: bash
  
    # - name: Check test output
    #   run: |
    #     test_file="examples/tests/${{ inputs.category }}/${{ inputs.sub-category }}/${{ inputs.test-name }}
        
    #     if [[ "${test_file}" == *.txt ]]; then
    #       diff output.txt "${test_file}.txt"
    #     elif [[ "${test_file}" == *.py ]]; then
    #       python3 "${test_file}.py" output.txt
    #     else
    #       echo "Unsupported file extension. Only .txt and .py are supported."
    #       exit 1
    #     fi
    #   shell: bash
